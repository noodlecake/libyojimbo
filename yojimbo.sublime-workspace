{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"num",
				"numServerAddresses"
			],
			[
				"Connet",
				"ConnectTokenBytes"
			],
			[
				"encrypted",
				"encryptedConnectTokenBase64"
			],
			[
				"Conn",
				"ConnectTokenBytes"
			],
			[
				"MaxS",
				"MaxServersPerConnectToken"
			],
			[
				"server",
				"ServerAddresses"
			],
			[
				"ConnectT",
				"ConnectTokenExpirySeconds"
			],
			[
				"base_",
				"base64_encode_string"
			],
			[
				"serve",
				"serverAddressBase64"
			],
			[
				"libyo",
				"libyojimbo_version"
			],
			[
				"YOJ",
				"YOJIMBO_PLATFORM"
			],
			[
				"Conne",
				"ConnectionFailed"
			],
			[
				"CLIENT_STATE_",
				"CLIENT_STATE_CHALLENGE_RESPONSE_TIMED_OUT"
			],
			[
				"Find",
				"FindConnectTokenEntry"
			],
			[
				"Net",
				"NetworkSimulator"
			],
			[
				"HeartB",
				"ConnectionHeartBeatPacket"
			],
			[
				"GetFirst",
				"GetFirstLocalIPV4Address"
			],
			[
				"ADDRES",
				"ADDRESS_IPV4"
			],
			[
				"INSE",
				"YOJIMBO_INSECURE_CONNECT"
			],
			[
				"InsecureC",
				"InsecureConnectPacket"
			],
			[
				"CLIENT_STATE",
				"CLIENT_STATE_SENDING_INSECURE_CONNECT"
			],
			[
				"serialize_int",
				"serialize_uint64"
			],
			[
				"m_all",
				"m_allPacketTypes"
			],
			[
				"CLIENT_SERVER",
				"CLIENT_SERVER_PACKET_CONNECTION_HEARTBEAT"
			],
			[
				"Is",
				"IsEncryptedPacketType"
			],
			[
				"GetNum",
				"GetNumGamePacketsReceived"
			],
			[
				"Challenge",
				"ChallengeTokenBytes"
			],
			[
				"CLIENT_STATE_CONNECT",
				"CLIENT_STATE_CONNECTION_DENIED"
			],
			[
				"exp",
				"expiryTimestamp"
			],
			[
				"time",
				"timestampOffsetInSeconds"
			],
			[
				"m_",
				"m_encryptionMappingTimeout"
			],
			[
				"s",
				"source"
			],
			[
				"CLIENT",
				"CLIENT_STATE_SENDING_CHALLENGE_RESPONSE"
			],
			[
				"PACKET_P",
				"PACKET_PROCESSOR_WRITE_PACKET_FAILED"
			],
			[
				"client",
				"client_to_server_key"
			],
			[
				"decr",
				"decryptedMessageLength"
			],
			[
				"CONNECTION",
				"CONNECTION_DENIED_ALREADY_CONNECTED"
			],
			[
				"CLIENT_STATE_CONN",
				"CLIENT_STATE_CONNECTION_REQUEST_TIMED_OUT"
			],
			[
				"CLIENT_STAT",
				"CLIENT_STATE_SENDING_CHALLENGE_RESPONSE"
			],
			[
				"last",
				"last_packet_send_time"
			],
			[
				"m_last",
				"m_lastPacketReceiveTime"
			],
			[
				"m_clie",
				"m_clientConnected"
			],
			[
				"PACKET_",
				"PACKET_CONNECTION_CHALLENGE"
			],
			[
				"CLIENT_S",
				"CLIENT_STATE_SENDING_CONNECTION_REQUEST"
			],
			[
				"SOCKET_ERROR_BIND_",
				"SOCKET_ERROR_BIND_IPV6_FAILED"
			],
			[
				"SOCKET_ERROR",
				"SOCKET_ERROR_SOCKOPT_IPV6_ONLY_FAILED"
			],
			[
				"Cha",
				"ChallengeTimeOut"
			],
			[
				"m_hash",
				"m_challengeHash"
			],
			[
				"ch",
				"ChallengeHashSize"
			],
			[
				"Se",
				"ServerChallengeHash"
			],
			[
				"Chan",
				"ChallengeHashSize"
			],
			[
				"challenge",
				"challenge_entry"
			],
			[
				"PROTOCOL",
				"PROTOCOL2_DECLARE_VIRTUAL_SERIALIZE_FUNCTIONS"
			],
			[
				"aggregate",
				"aggregateReadHeader"
			],
			[
				"PROTOCOL2_ERROR_SER",
				"PROTOCOL2_ERROR_SERIALIZE_HEADER_FAILED"
			],
			[
				"aggreg",
				"aggregatePacketHeader"
			],
			[
				"PROTOCOL2_ERROR_FAIL",
				"PROTOCOL2_ERROR_SERIALIZE_HEADER_FAILED"
			],
			[
				"PROTOCOL2_ERROR",
				"PROTOCOL2_ERROR_CREATE_PACKET_FAILED"
			],
			[
				"MaxPe",
				"MaxPacketsPerIteration"
			],
			[
				"numPackets",
				"numPacketsRead"
			],
			[
				"max",
				"maxPacketsToRead"
			],
			[
				"MaxPackets",
				"MaxPacketsPerIteration"
			],
			[
				"numPAckets",
				"numPacketsWritten"
			],
			[
				"previous",
				"previous"
			],
			[
				"prve",
				"previous"
			],
			[
				"nu",
				"previousChunkNumSlices"
			],
			[
				"force",
				"forceAckPreviousChunk"
			],
			[
				"Packet",
				"PacketBufferEntry"
			],
			[
				"Max",
				"MaxFragmentSize"
			],
			[
				"SERIALIZE_",
				"PROTOCOL2_SERIALIZE_OBJECT"
			],
			[
				"rec",
				"receivedFragments"
			],
			[
				"MaxFrag",
				"MaxFragmentsPerPacket"
			],
			[
				"total",
				"total_fragments"
			],
			[
				"sequence",
				"sequence_difference"
			],
			[
				"MAX",
				"MaxFragmentSize"
			],
			[
				"PROTOCOL2_ERR",
				"PROTOCOL2_STREAM_ERROR_NONE"
			],
			[
				"TEST_PACKET",
				"TEST_PACKET_NUM_TYPES"
			],
			[
				"SYNC_MODE_",
				"SYNC_MODE_ADAPTIVE_SMOOTHING"
			],
			[
				"SYNC_MODE_QU",
				"SYNC_MODE_QUANTIZE_ON_BOTH_SIDES"
			],
			[
				"SYNC",
				"SYNC_MODE_UNCOMPRESSED"
			],
			[
				"min",
				"min_ticks_ahead"
			],
			[
				"old_st",
				"oldest_input_in_packet"
			],
			[
				"ready_to_",
				"ready_to_apply_adjustment_offset"
			],
			[
				"time_",
				"time_last_dropped_input"
			],
			[
				"server_cet",
				"server_get_client_input"
			],
			[
				"Input",
				"InputSlidingWindowSize"
			],
			[
				"ready",
				"ready_to_apply_sync"
			],
			[
				"client_",
				"client_sync_data"
			],
			[
				"tim",
				"time_last_packet_received"
			],
			[
				"PACKET",
				"PACKET_TYPE_CONNECTION_REQUEST"
			],
			[
				"PACKET_TYPE",
				"PACKET_TYPE_INPUT"
			],
			[
				"PACKET_TYPE_",
				"PACKET_TYPE_CONNECTION_DENIED"
			],
			[
				"PACK",
				"PACKET_TYPE_CONNECTION_REQUEST"
			],
			[
				"COMP",
				"COMPRESSION_MODE_ORIENTATION"
			],
			[
				"COM",
				"COMPRESSION_MODE_NO_VELOCITY"
			],
			[
				"position",
				"position_error_dist_squared"
			],
			[
				"pos",
				"position_error"
			],
			[
				"STATE",
				"STATEFUL_MODE_INPUT_AND_STATE"
			],
			[
				"Priority",
				"CubePriorityInfo"
			],
			[
				"Quant",
				"QuantizedPositionBoundXY"
			],
			[
				"Position",
				"QuantizedPositionBoundXY"
			],
			[
				"Quantiz",
				"QuantizedSnapshotWithVelocity"
			],
			[
				"Qua",
				"QuantizedCubeState"
			],
			[
				"linera_",
				"linear_velocity_y"
			],
			[
				"DELTA_MODE",
				"DELTA_MODE_RELATIVE_INDEX"
			],
			[
				"COMPRESSION_MODE",
				"COMPRESSION_MODE_POSITION"
			],
			[
				"abso",
				"absolute_position_bits"
			],
			[
				"absol",
				"absolute_quaternion_bits"
			],
			[
				"ab",
				"absolute_quaternion_bits"
			],
			[
				"Rel",
				"RelativeQuaternionLargeW"
			],
			[
				"quater",
				"quaternion_negative_w"
			],
			[
				"COMPRESSION",
				"COMPRESSION_MODE_QUANTIZE_POSITION"
			],
			[
				"QuantizedPosition",
				"QuantizedPositionBoundXY"
			],
			[
				"snap",
				"snapshot_sequence_buffer"
			],
			[
				"CONTEXT_SNAP",
				"CONTEXT_SNAPSHOT_SLIDING_WINDOW"
			],
			[
				"ntework",
				"network_simulator"
			],
			[
				"snapshot",
				"snapshot_sliding_window"
			],
			[
				"m_ba",
				"m_bandwidthExclude"
			],
			[
				"received",
				"received_snapshot_this_frame"
			],
			[
				"COMPRES",
				"COMPRESSION_MODE_UNCOMPRESSED"
			],
			[
				"INT",
				"SNAPSHOT_INTERPOLATION_HERMITE"
			],
			[
				"SNAPSHOT_MODE_",
				"SNAPSHOT_MODE_LINEAR_INTERPOLATION_10PPS"
			],
			[
				"SNAPSHOT_MODE",
				"SNAPSHOT_MODE_NAIVE_60PPS_JITTER"
			],
			[
				"interpo",
				"interpolation_start_time"
			],
			[
				"inter",
				"interpolation_start_time"
			],
			[
				"SNAPSHOT_IN",
				"SNAPSHOT_INTERPOLATION_HERMITE"
			],
			[
				"SNAPSHOT",
				"SNAPSHOT_INTERPOLATION_LINEAR"
			],
			[
				"LOCK",
				"LOCKSTEP_MODE_DETERMINISTIC"
			]
		]
	},
	"buffers":
	[
		{
			"file": "premake5.lua",
			"settings":
			{
				"buffer_size": 11062,
				"line_ending": "Windows"
			}
		},
		{
			"file": "yojimbo_client_server.h",
			"settings":
			{
				"buffer_size": 31114,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/User/Markdown Render [Grip].sublime-build",
					""
				],
				[
					"Packages/User/Markdown Render [Grip].sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/User/Markdown Render [Grip].sublime-build",
					""
				],
				[
					"Packages/User/Markdown Render [Grip].sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/User/C++11 (Server).sublime-build",
					""
				],
				[
					"Packages/User/C++11 (Server).sublime-build",
					"Run"
				]
			],
			[
				"Packages/User/C++11 (Server).sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 87.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"TODO",
				"View: Toggle Open Files in Side Bar"
			],
			[
				"syntax mark",
				"Set Syntax: Markdown"
			],
			[
				"install pac",
				"Package Control: Install Package"
			],
			[
				"install package",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"package install",
				"Package Control: Install Package"
			],
			[
				"Packinst",
				"Package Control: Install Package"
			],
			[
				"git",
				"Git: Commit history"
			],
			[
				"",
				"Package Control: Discover Packages"
			],
			[
				"Pack",
				"Package Control: Disable Package"
			],
			[
				"Package",
				"Preferences: Browse Packages"
			],
			[
				"Clang",
				"Preferences: SublimeClang Settings – User"
			],
			[
				"Sub",
				"Preferences: SublimeClang Settings – Default"
			],
			[
				"Install",
				"Package Control: Install Package"
			]
		],
		"width": 485.0
	},
	"console":
	{
		"height": 416.0,
		"history":
		[
			"print 'hello'",
			"print \"hello\"",
			"ls",
			"ls -al",
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": true,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
	],
	"file_history":
	[
		"/C/Users/Glenn Fiedler/libyojimbo/yojimbo_packet_processor.h",
		"/C/Users/Glenn Fiedler/libyojimbo/server.cpp",
		"/C/Users/Glenn Fiedler/libyojimbo/shared.h",
		"/C/Users/Glenn Fiedler/libyojimbo/yojimbo_client_server.cpp",
		"/C/Users/Glenn Fiedler/libyojimbo/yojimbo_client_server.h",
		"/C/Users/Glenn Fiedler/libyojimbo/TODO",
		"/C/Users/Glenn Fiedler/libyojimbo/README.md",
		"/C/Users/Glenn Fiedler/libyojimbo/test.cpp",
		"/C/Users/Glenn Fiedler/libyojimbo/yojimbo_queue.h",
		"/C/Users/Glenn Fiedler/libyojimbo/yojimbo_packet.cpp",
		"/C/Users/Glenn Fiedler/protocol2/premake5.lua",
		"/C/Users/Glenn Fiedler/libyojimbo/yojimbo_connection.cpp",
		"/C/Users/Glenn Fiedler/libyojimbo/yojimbo_channel.h",
		"/C/Users/Glenn Fiedler/libyojimbo/yojimbo_channel.cpp",
		"/C/Users/Glenn Fiedler/libyojimbo/info.cpp",
		"/C/Users/Glenn Fiedler/libyojimbo/premake5.lua",
		"/C/Users/Glenn Fiedler/libyojimbo/yojimbo_interface.cpp",
		"/C/Users/Glenn Fiedler/libyojimbo/yojimbo_interface.h",
		"/C/Users/Glenn Fiedler/libyojimbo/yojimbo_packet.h",
		"/Users/gaffer/git/libyojimbo/TODO.md",
		"/Users/gaffer/git/libyojimbo/yojimbo_client_server.cpp",
		"/Users/gaffer/git/libyojimbo/premake5.lua",
		"/Users/gaffer/git/libyojimbo/test.cpp",
		"/Users/gaffer/git/libyojimbo/shared.h",
		"/Users/gaffer/git/libyojimbo/yojimbo_matcher.h",
		"/Users/gaffer/git/libyojimbo/yojimbo_sockets.h",
		"/Users/gaffer/git/libyojimbo/yojimbo_client_server.h",
		"/Users/gaffer/git/libyojimbo/server.cpp",
		"/Users/gaffer/git/libyojimbo/yojimbo_packet.h",
		"/Users/gaffer/git/libyojimbo/yojimbo_stream.h",
		"/Users/gaffer/git/libyojimbo/rapidjson/stream.h",
		"/Users/gaffer/git/libyojimbo/yojimbo_platform.cpp",
		"/Users/gaffer/git/libyojimbo/yojimbo_sockets.cpp",
		"/Users/gaffer/git/libyojimbo/yojimbo_allocator.h",
		"/Users/gaffer/git/libyojimbo/yojimbo.h",
		"/Users/gaffer/git/libyojimbo/yojimbo.cpp",
		"/Users/gaffer/git/libyojimbo/yojimbo_matcher.cpp",
		"/Users/gaffer/git/libyojimbo/windows/mbedtls/base64.h",
		"/Users/gaffer/git/libyojimbo/yojimbo_common.cpp",
		"/Users/gaffer/git/libyojimbo/yojimbo_network.cpp",
		"/Users/gaffer/git/libyojimbo/yojimbo_address.cpp",
		"/Users/gaffer/git/libyojimbo/CHANGES.md",
		"/Users/gaffer/git/libyojimbo/BUILDING.md",
		"/Users/gaffer/git/libyojimbo/errorlist.txt",
		"/Users/gaffer/git/libyojimbo/cppcheck.txt",
		"/Users/gaffer/git/libyojimbo/lint.txt",
		"/Users/gaffer/git/libyojimbo/client.cpp",
		"/Users/gaffer/git/libyojimbo/connect.cpp",
		"/Users/gaffer/git/libyojimbo/yojimbo_packet.cpp",
		"/Users/gaffer/git/libyojimbo/yojimbo_interface.cpp",
		"/Users/gaffer/git/libyojimbo/rapidjson/msinttypes/inttypes.h",
		"/Users/gaffer/git/libyojimbo/docker/matcher/matcher.go",
		"/Users/gaffer/git/libyojimbo/client_server.cpp",
		"/Users/gaffer/git/libyojimbo/yojimbo_packet_processor.cpp",
		"/Users/gaffer/git/libyojimbo/windows/mbedtls/error.h",
		"/Users/gaffer/git/libyojimbo/yojimbo_config.h",
		"/Users/gaffer/git/libyojimbo/ROADMAP.md",
		"/Users/gaffer/git/libyojimbo/mbedtls/compat-1.3.h",
		"/Users/gaffer/git/libyojimbo/mbedtls/entropy.h",
		"/Users/gaffer/git/libyojimbo/yojimbo_encryption.cpp",
		"/Users/gaffer/git/libyojimbo/.git/MERGE_MSG",
		"/Users/gaffer/git/libyojimbo/LICENCE.md",
		"/Users/gaffer/Downloads/mbedtls-mbedtls-2.1.5/LICENSE",
		"/Users/gaffer/Downloads/mbedtls-mbedtls-2.1.5/include/mbedtls/aesni.h",
		"/Users/gaffer/Downloads/mbedtls-mbedtls-2.1.5/apache-2.0.txt",
		"/Users/gaffer/git/libyojimbo/rapidjson/license.txt",
		"/Users/gaffer/git/libyojimbo/README.md",
		"/Users/gaffer/git/libyojimbo/docker/Dockerfile",
		"/Users/gaffer/git/libyojimbo/docker/matcher/Dockerfile",
		"/Users/gaffer/git/libyojimbo/yojimbo_address.h",
		"/Users/gaffer/simp_le-master/simp_le.py",
		"/Users/gaffer/simp_le-master/README.rst",
		"/Users/gaffer/git/libyojimbo/BUG",
		"/Users/gaffer/git/libyojimbo/yojimbo_common.h",
		"/Users/gaffer/git/libyojimbo/yojimbo_encryption.h",
		"/Users/gaffer/Downloads/libsodium-go-master/cryptoaead/crypto_aead_aes256gcm.go",
		"/Users/gaffer/Downloads/libsodium-go-master/support/support.go",
		"/Users/gaffer/Downloads/libsodium-go-master/cryptosecretbox/crypto_secretbox_easy.go",
		"/Users/gaffer/Downloads/libsodium-go-master/cryptoauth/crypto_auth.go",
		"/Users/gaffer/Downloads/libsodium-go-master/cryptosecretbox/crypto_secretbox.go",
		"/Users/gaffer/Downloads/libsodium-go-master/sodium/utils.go",
		"/Users/gaffer/Downloads/libsodium-go-master/scalarmult/crypto_scalarmult.go",
		"/Users/gaffer/Downloads/libsodium-go-master/cryptobox/crypto_box_easy.go",
		"/Users/gaffer/Downloads/libsodium-go-master/sodium/runtime.go",
		"/Users/gaffer/Downloads/libsodium-go-master/sodium/core.go",
		"/Users/gaffer/git/libyojimbo/backend/matcher.go",
		"/Users/gaffer/git/jsmn/example/simple.c",
		"/Users/gaffer/git/libyojimbo/docker/buildServer.bat",
		"/Users/gaffer/git/libyojimbo/docker/buildServer.sh",
		"/Users/gaffer/git/libyojimbo/docker/copyFiles.sh",
		"/Users/gaffer/git/libyojimbo/docker/runServer.sh",
		"/Users/gaffer/git/libyojimbo/docker/runServer.bat",
		"/Users/gaffer/libucl-0.8.0/include/ucl.h",
		"/Users/gaffer/git/libyojimbo/docker/Dockerfile-ass",
		"/Users/gaffer/libucl-0.8.0/examples/ucl_cpp.cc",
		"/Users/gaffer/git/libyojimbo/yojimbo_json.h",
		"/Users/gaffer/msgpack-c/QUICKSTART-C.md",
		"/Users/gaffer/git/libyojimbo/CHANGES",
		"/Users/gaffer/git/libyojimbo/TODO",
		"/Users/gaffer/.Trash/libb64-1.2/src/cdecode.c",
		"/Users/gaffer/.Trash/libb64-1.2/src/cencode.c",
		"/Users/gaffer/git/libyojimbo/BUILDING",
		"/Users/gaffer/Downloads/libb64-1.2/include/b64/encode.h",
		"/Users/gaffer/Downloads/libb64-1.2/include/b64/decode.h",
		"/Users/gaffer/git/libyojimbo/cencode.h",
		"/Users/gaffer/git/libyojimbo/cdecode.h",
		"/Users/gaffer/Downloads/libb64-1.2/base64/base64.cc",
		"/Users/gaffer/git/libyojimbo/cencode.c",
		"/Users/gaffer/git/libyojimbo/cdecode.c",
		"/Users/gaffer/git/libyojimbo/yojimbo_bitpack.h",
		"/Users/gaffer/git/libyojimbo/Makefile",
		"/Users/gaffer/git/libyojimbo/yojimbo_simulator.cpp",
		"/Users/gaffer/docker/Dockerfile",
		"/Users/gaffer/docker/commands.txt",
		"/Users/gaffer/git/libyojimbo-fucked/premake5.lua",
		"/Users/gaffer/libsodium-1.0.10/README.markdown",
		"/Users/gaffer/git/libyojimbo/yojimbo_network.h",
		"/Users/gaffer/git/libyojimbo/yojimbo_interface.h",
		"/Users/gaffer/git/libyojimbo/yojimbo_simulator.h",
		"/Users/gaffer/docker/DockerFile",
		"/Users/gaffer/git/libyojimbo/yojimbo_simulator_interface.cpp",
		"/Users/gaffer/git/libyojimbo/yojimbo_base_interface.h",
		"/Users/gaffer/git/libyojimbo/yojimbo_simulator_interface.h",
		"/Users/gaffer/git/libyojimbo/yojimbo_network_simulator.h",
		"/Users/gaffer/git/libyojimbo/yojimbo_base_interface.cpp",
		"/Users/gaffer/git/libyojimbo/yojimbo_network_interface.h",
		"/Users/gaffer/git/libyojimbo/yojimbo_socket_interface.cpp",
		"/Users/gaffer/git/libyojimbo/yojimbo_socket_interface.h"
	],
	"find":
	{
		"height": 28.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"-CHANGES,-TODO,-WOULDBENICE",
			"-CHANGES,-TODO",
			"<open files>",
			"-CHANGES,-TODO",
			"<open files>",
			"-CHANGES,-TODO",
			"<open files>",
			"-CHANGES,-TODO",
			"",
			"-CHANGES,-TODO",
			"-CHANGES,TODO",
			"-CHANGES",
			"-CHANGES -TODO",
			"",
			"*.h,*.cpp",
			"*.h;*.cpp",
			"*.h *.cpp",
			"",
			"sam/*.h;sam/*.cpp",
			"sam/*.h,sam/*.cpp",
			"sam/*.h sam/*.cpp",
			"*.h *.cpp",
			"*.h,*.cpp",
			"*.h;*.cpp",
			"*.h,*.cpp",
			"*.h;*.cpp",
			"*.h *.cpp",
			"",
			"*.h",
			"*.cpp",
			"*.cpp *.h",
			"*.cpp; *.h",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"InitializeContext",
			"EnablePacketEncryption",
			"CONNECTION_REQUEST",
			"SetEncrypt",
			"Encryption",
			"ClientPort",
			"m_entries",
			"64",
			"m_packetProcessor",
			"204",
			"SendQueue",
			"\"processed packet",
			"Malloc",
			"MallocA",
			"len = ret",
			"::ReceivePackets",
			"float",
			"memset",
			"clean",
			"never used",
			"GameServer",
			"Cppcheck cannot find all the include files",
			"winsock",
			"wsock",
			"windows.h",
			"<windows.h>",
			"#undef min",
			"#define min",
			"new ",
			"ClientServerPacketFactory",
			"alloca(",
			"alloca",
			"m_alloc_map",
			"htons",
			"PRI",
			"PRux64",
			"PRIux",
			"client state is not",
			"client sent packet %d",
			"low-level",
			"low-leel",
			"received ",
			"printf(",
			"print_bytes",
			"sequence == 0",
			"ProcessPacket",
			"NETWORK_INTERFACE_FLAG_INSECURE_MODE",
			"WritePacket",
			"ReceivePacket",
			"ReadPacket",
			"clientToServer",
			"SendPacketToServer",
			"ProcessConnection",
			"ProcessConnectionResponse",
			"Parse",
			"connectData",
			"Connect( ",
			"Connect",
			"PRIi64",
			"PRIu64",
			"printf",
			"// todo",
			"GetDefaultAllocator",
			"YOJIMBO_DELETE",
			"Allocator & allocator",
			"mbedtls_entropy_func",
			"entropy_func",
			"mbedtls_entropy_func",
			"alloca",
			"alloca()",
			"alloca",
			"ucl",
			"printf",
			"m_match",
			"#include <ucl.h",
			"libucl.h",
			"#include <libucl",
			"libucl",
			"PRI",
			"my_debug",
			"\"info'	",
			"PrintBytes",
			"print_bytes",
			"private_key",
			"key,",
			"insecure_connect_timeout",
			"nonce",
			"private_key",
			"shared.h",
			"( private_key",
			"private_key",
			"ch",
			"cha",
			"SetPort(",
			"GameNetworkInterface",
			"SetPort",
			"m_address",
			"GetAddress",
			"Matcher",
			"print_bytes",
			"PrintByte",
			"PrintBytes",
			"EncryptConnectToken",
			"Encrypt_AEAD",
			"ConnectTokenBytes",
			"Encrypt_AEAD",
			"AEAD",
			"Read",
			"/home",
			"zip",
			"_json",
			"char * json",
			"strlen",
			"printf",
			"decode_data",
			"string_",
			"string(",
			"fromstring",
			"array_find",
			"ucl_array_find_index",
			"ConnectToken",
			"json",
			"ucl_parser_",
			"PRIx64",
			"PRI",
			"UCL_EMIT",
			"emit_type",
			"/*"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"SequenceBuffer",
			"sequence_buffer",
			"SequenceBuffer",
			"sliding_window",
			"network_buffer.",
			"NetworkBuffer<",
			"ring_buffer",
			"CORE_ASSERT",
			"CORE_ASSERT_CLOSE",
			"CORE_ASSERT",
			"CORE_CHECK",
			"CORE_ARRAY_NEW",
			"CORE_NEW_ARRAY",
			"CORE_DELETE_ARRAY",
			"CORE_DELETE",
			"CORE_NEW",
			"CORE_ASSERT",
			"Simulator::",
			"memory_globals.",
			"global.",
			"PROTOCOL_CHECK(",
			"PROTOCOL_ASSERT(",
			"assert",
			"bitpacker",
			"    ",
			"namespace sam",
			"namespace sam {",
			"America 2008-2012",
			"netProtocolOld.h"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "premake5.lua",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11062,
						"regions":
						{
						},
						"selection":
						[
							[
								690,
								690
							]
						],
						"settings":
						{
							"syntax": "Packages/Lua/Lua.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "yojimbo_client_server.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 31114,
						"regions":
						{
						},
						"selection":
						[
							[
								1935,
								1935
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 900.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 28.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 524.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/Makefile/Make.sublime-build",
	"project": "yojimbo.sublime-project",
	"replace":
	{
		"height": 52.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"client_server",
				"libyojimbo\\yojimbo_client_server.h"
			],
			[
				"premake5",
				"libyojimbo\\premake5.lua"
			],
			[
				"premake",
				"libyojimbo\\premake5.lua"
			],
			[
				"connection.cpp",
				"libyojimbo\\yojimbo_connection.cpp"
			],
			[
				"channel.h",
				"libyojimbo\\yojimbo_channel.h"
			],
			[
				"channel.cpp",
				"libyojimbo\\yojimbo_channel.cpp"
			],
			[
				"premake5.lua",
				"libyojimbo\\premake5.lua"
			],
			[
				"client_server.cpp",
				"libyojimbo\\yojimbo_client_server.cpp"
			],
			[
				"server.cpp",
				"libyojimbo\\server.cpp"
			],
			[
				"interface.h",
				"libyojimbo\\yojimbo_interface.h"
			],
			[
				"shared.h",
				"libyojimbo\\shared.h"
			],
			[
				"packet.h",
				"libyojimbo\\yojimbo_packet.h"
			],
			[
				"client_server.h",
				"libyojimbo\\yojimbo_client_server.h"
			],
			[
				"todo",
				"libyojimbo\\TODO"
			],
			[
				"test.cpp",
				"libyojimbo\\test.cpp"
			],
			[
				"pre",
				"libyojimbo\\premake5.lua"
			],
			[
				"queue.h",
				"libyojimbo\\yojimbo_queue.h"
			],
			[
				"proc",
				"libyojimbo\\yojimbo_packet_processor.h"
			],
			[
				"inter",
				"libyojimbo\\yojimbo_interface.cpp"
			],
			[
				"process",
				"libyojimbo\\yojimbo_packet_processor.h"
			],
			[
				"read",
				"libyojimbo\\README.md"
			],
			[
				"interface.cpp",
				"libyojimbo\\yojimbo_interface.cpp"
			],
			[
				"processor.h",
				"libyojimbo\\yojimbo_packet_processor.h"
			],
			[
				"queue",
				"libyojimbo\\yojimbo_queue.h"
			],
			[
				"packet.cpp",
				"libyojimbo\\yojimbo_packet.cpp"
			],
			[
				"info.cpp",
				"libyojimbo\\info.cpp"
			],
			[
				"building.md",
				"libyojimbo/BUILDING.md"
			],
			[
				"changes",
				"libyojimbo/CHANGES.md"
			],
			[
				"allocator.h",
				"libyojimbo/yojimbo_allocator.h"
			],
			[
				"yojimbo.h",
				"libyojimbo/yojimbo.h"
			],
			[
				"yojimbo.cpp",
				"libyojimbo/yojimbo.cpp"
			],
			[
				"client_ser",
				"libyojimbo/yojimbo_client_server.cpp"
			],
			[
				"common.cpp",
				"libyojimbo/yojimbo_common.cpp"
			],
			[
				"err",
				"libyojimbo/errorlist.txt"
			],
			[
				"test",
				"libyojimbo/test.cpp"
			],
			[
				"errorlist.txt",
				"libyojimbo/errorlist.txt"
			],
			[
				"base",
				"libyojimbo/windows/mbedtls/base64.h"
			],
			[
				"base64h",
				"libyojimbo/windows/mbedtls/base64.h"
			],
			[
				"common",
				"libyojimbo/yojimbo_common.cpp"
			],
			[
				"mach",
				"libyojimbo/yojimbo_matcher.cpp"
			],
			[
				"base64",
				"libyojimbo/windows/mbedtls/base64.h"
			],
			[
				"error",
				"libyojimbo/errorlist.txt"
			],
			[
				"sockets.cpp",
				"libyojimbo/yojimbo_sockets.cpp"
			],
			[
				"address",
				"libyojimbo/yojimbo_address.cpp"
			],
			[
				"matcher.h",
				"libyojimbo/yojimbo_matcher.h"
			],
			[
				"socket.h",
				"libyojimbo/yojimbo_sockets.h"
			],
			[
				"server",
				"libyojimbo/server.cpp"
			],
			[
				"stream.h",
				"libyojimbo/yojimbo_stream.h"
			],
			[
				"yojimbo_stream.h",
				"libyojimbo/yojimbo_stream.h"
			],
			[
				"cppcheck",
				"libyojimbo/cppcheck.txt"
			],
			[
				"cppcheck.txt",
				"libyojimbo/cppcheck.txt"
			],
			[
				"network.cpp",
				"libyojimbo/yojimbo_network.cpp"
			],
			[
				"lint.txt",
				"libyojimbo/lint.txt"
			],
			[
				"socket",
				"libyojimbo/yojimbo_sockets.cpp"
			],
			[
				"connect.cpp",
				"libyojimbo/connect.cpp"
			],
			[
				"client.cpp",
				"libyojimbo/client.cpp"
			],
			[
				"matcher",
				"libyojimbo/yojimbo_matcher.cpp"
			],
			[
				"packet_processor.cpp",
				"libyojimbo/yojimbo_packet_processor.cpp"
			],
			[
				"interfac",
				"libyojimbo/yojimbo_interface.cpp"
			],
			[
				"matcher.go",
				"libyojimbo/docker/matcher/matcher.go"
			],
			[
				"client_server.",
				"libyojimbo/yojimbo_client_server.cpp"
			],
			[
				"yojimbo_con",
				"libyojimbo/yojimbo_config.h"
			],
			[
				"connect",
				"libyojimbo/connect.cpp"
			],
			[
				"match.h",
				"libyojimbo/yojimbo_matcher.h"
			],
			[
				"roadma",
				"libyojimbo/ROADMAP.md"
			],
			[
				"roadmap.md",
				"libyojimbo/ROADMAP.md"
			],
			[
				"matcher.cpp",
				"libyojimbo/yojimbo_matcher.cpp"
			],
			[
				"client_serve",
				"libyojimbo/yojimbo_client_server.h"
			],
			[
				"encryp",
				"libyojimbo/yojimbo_encryption.cpp"
			],
			[
				"yoj",
				"libyojimbo/yojimbo.h"
			],
			[
				"client.cp",
				"libyojimbo/client.cpp"
			],
			[
				"client",
				"libyojimbo/yojimbo_client_server.h"
			],
			[
				"lic",
				"libyojimbo/rapidjson/license.txt"
			],
			[
				"matche.cpp",
				"libyojimbo/yojimbo_matcher.cpp"
			],
			[
				"b",
				"libyojimbo/BUILDING.md"
			],
			[
				"docker",
				"libyojimbo/docker/Dockerfile"
			],
			[
				"dockerfile",
				"libyojimbo/docker/Dockerfile"
			],
			[
				"yo",
				"libyojimbo/yojimbo_address.h"
			],
			[
				"road",
				"libyojimbo/ROADMAP.md"
			],
			[
				"",
				"libyojimbo/yojimbo_client_server.cpp"
			],
			[
				"cs",
				"libyojimbo/client_server.cpp"
			],
			[
				"bug",
				"libyojimbo/BUG"
			],
			[
				"enc",
				"libyojimbo/yojimbo_encryption.cpp"
			],
			[
				"clinet_server.cpp",
				"libyojimbo/client_server.cpp"
			],
			[
				"encrypt",
				"libyojimbo/yojimbo_encryption.cpp"
			],
			[
				"match",
				"libyojimbo/docker/matcher/matcher.go"
			],
			[
				"address.cpp",
				"libyojimbo/yojimbo_address.cpp"
			],
			[
				"common.h",
				"libyojimbo/yojimbo_common.h"
			],
			[
				"client_srev",
				"libyojimbo/yojimbo_client_server.cpp"
			],
			[
				"encryption",
				"libyojimbo/yojimbo_encryption.h"
			],
			[
				"encryt",
				"libyojimbo/yojimbo_encryption.h"
			],
			[
				"client_s",
				"libyojimbo/yojimbo_client_server.cpp"
			],
			[
				"dock",
				"libyojimbo/docker/matcher/Dockerfile"
			],
			[
				"go",
				"libyojimbo/docker/matcher/matcher.go"
			],
			[
				"todo.md",
				"libyojimbo/TODO.md"
			],
			[
				"encry",
				"libyojimbo/yojimbo_encryption.h"
			],
			[
				"doc",
				"libyojimbo/docker/Dockerfile"
			],
			[
				"cha",
				"libyojimbo/CHANGES.md"
			],
			[
				"changes.md",
				"libyojimbo/CHANGES.md"
			],
			[
				"runserver.bat",
				"libyojimbo/docker/runServer.bat"
			],
			[
				"buildserver.bat",
				"libyojimbo/docker/buildServer.bat"
			],
			[
				"buildserver.sh",
				"libyojimbo/docker/buildServer.sh"
			],
			[
				"copyfiles.sh",
				"libyojimbo/docker/copyFiles.sh"
			],
			[
				"client_sere",
				"libyojimbo/yojimbo_client_server.h"
			],
			[
				"ucl",
				"~/libucl-0.8.0/include/ucl.h"
			],
			[
				"tset.cpp",
				"libyojimbo/test.cpp"
			],
			[
				"client_",
				"libyojimbo/client_server.cpp"
			],
			[
				"client_serer.",
				"libyojimbo/yojimbo_client_server.h"
			],
			[
				"yojimbo_client",
				"libyojimbo/yojimbo_client_server.h"
			],
			[
				"y",
				"libyojimbo/yojimbo.h"
			],
			[
				"json",
				"libyojimbo/yojimbo_json.h"
			],
			[
				"pr",
				"libyojimbo/premake5.lua"
			],
			[
				"config",
				"libyojimbo/yojimbo_config.h"
			],
			[
				"readm",
				"libyojimbo/README.md"
			],
			[
				"cencode.h",
				"libyojimbo/cencode.h"
			],
			[
				"yojimbo_config.h",
				"libyojimbo/yojimbo_config.h"
			],
			[
				"build",
				"libyojimbo/BUILDING"
			],
			[
				"make",
				"libyojimbo/Makefile"
			],
			[
				"config.h",
				"libyojimbo/yojimbo_config.h"
			],
			[
				"building",
				"libyojimbo/BUILDING"
			],
			[
				"simulator",
				"libyojimbo/yojimbo_simulator.cpp"
			],
			[
				"yojimbo_sim",
				"yojimbo_simulator.cpp"
			],
			[
				"cient.cpp",
				"client.cpp"
			],
			[
				"interfac.h",
				"yojimbo_interface.h"
			],
			[
				"network.h",
				"yojimbo_network.h"
			],
			[
				"simulator_interface.cpp",
				"yojimbo_simulator_interface.cpp"
			],
			[
				"simulator_inte",
				"yojimbo_simulator_interface.h"
			],
			[
				"simulator.h",
				"yojimbo_simulator.h"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 404.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 276.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
