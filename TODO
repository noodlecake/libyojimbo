DONE    

TODO

    It's been a few months since I worked on libyojimbo, so take a good look around and evaluate the next steps.

    Key things to implement from my point of view:

        1. Finish custom allocator integration per-client on server

        2. Do anything I can do to make integration of the libyojimbo library easier

        3. Look over all existing code and see if there are any obvious problems.

    ------------------

    Next create global and per-client allocators on server, and one allocator on client.

    Make sure these allocators are dynamically created according to config via virtual functions. 

    Add an interface something like this to the server:

        GetGlobalAllocator()

        GetClientAllocator( int clientIndex )

    And for the client, just:

        GetClientAllocator()

    ------------------

    Rework the transport so it can be created optionally without a packet factory.

    Add a SetPacketFactory method

    Create the packet factory for client and server internally via a virtual.

    Make sure it the transport has SetPacketFactory called on it.

    ------------------

    Make sure that all client/server test cases in test.cpp and elsewhere remove the packet factory from setup.

    ------------------

    Now make sure all the packet factory, message factory and stream allocator go through the same allocator: 

    ------------------

    Make sure all tests pass with limited memory per-client.

    ------------------

    Packet fragmentation and reassembly.

    Definitely needed for large snapshot blocks.

    Default to maximum packet size of 8k, so up to 7 ~1200 MTU packets

    ------------------

    v0.3.0 release (!!!) YEY! :D

    ------------------
