DONE    

TODO

    Start with instantiating the per-client packet factories on the server.

    Base this on exactly how the per-client message factories are created. In fact, just search and duplicate.

    Next, when a packet is being sent on the server, add two support functions:

        CreateGlobalPacket( int type )
        CreateClientPacket( int clientIndex, int type )

    And call the appropriate packet create function depending on context.

    Next, add the packet factory to the context.

    Now when a packet is read in, see if a context exists, and if it does, use the packet factory in the context instead of the global factory on the transport.

    At this point, packets should be getting allocated from the per-client packet factories where appropriate, and the global packet factory for all other packets.

    ------------------

    Make sure that all code that creates packets is aware that it could get a NULL value returned. All message and packet create should gracefully handle packet create being NULL and set an error condition on the connection, or ignore, whichever is appropriate.

    ------------------

    Packet fragmentation and reassembly.

    Definitely needed for large snapshot blocks.

    Default to maximum packet size of 8k, so up to 7 ~1200 MTU packets

    ------------------

    v0.3.0 release (!!!) YEY! :D

    ------------------
