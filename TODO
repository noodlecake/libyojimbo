DONE

    Bring across data structures for blocks from example source code.

    Some work converting the send block data. Needed to add explicit "Allocate" and "Free" functions to this struct, so it can work with allocator.

    Note that there is a bunch of stuff in the config for the blocks that needs to be put in the connection config. eg. MaxBlockSize, MaxFragmentsPerBlock and so on. These must be user configurable.

    Next do the same for the block receive structure as well.

    OK. So these data structures in theory should be ready to integrate with the connection.

    Hook them up.

    OK. Send and receive block data are now hooked up nicely, and I've moved the relevant block configuration into ConnectionConfig. Nice!

TODO

    Up next. Diff the 006 example vs. the 007 example and use that to drive additions to connection.h / cpp. This will highlight things to copy. Can do this on windows with Araxis Merge.




    --------------

    Add large block support:

    1. Extend the system to support large blocks from example source code

    2. Bring across unit tests for large blocks

    --------------

    Idea of block message having a real serialize function (fragment 0), but also a block attached to it is sexy.

    This could be really flexible, for example for a large block you want to send across, but with some free from data you 
    also want to send with it, eg. metadata describing that block.

    The idea also of having different blocks as message types, so you can distinguish different blocks sent is really strong.

    Nice!

    --------------
